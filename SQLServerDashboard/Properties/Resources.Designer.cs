//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SQLServerDashboard.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SQLServerDashboard.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT ER.session_id,
        ///	CAST(((DATEDIFF(s,start_time,GetDate()))/3600) as varchar) + &apos; hour(s), &apos; 
        ///        + CAST((DATEDIFF(s,start_time,GetDate())%3600)/60 as varchar) + &apos;min, &apos; 
        ///        + CAST((DATEDIFF(s,start_time,GetDate())%60) as varchar) + &apos; sec&apos; as running_time, 
        ///	ER.cpu_time,
        ///	DB_NAME(ER.database_id), 
        ///	ER.command,
        ///	ER.blocking_session_id as Blocker, 
        ///	case when EXISTS(select 1 from sys.dm_exec_requests r where r.blocking_session_id = session_id) then &apos;Yes&apos; else &apos;&apos; END AS Blocking,
        ///	LAST_WA [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CurrentSessions {
            get {
                return ResourceManager.GetString("CurrentSessions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT 
        ///   SessionId    = s.session_id, 
        ///   LastCommandBatch = (select text from sys.dm_exec_sql_text(c.most_recent_sql_handle)),
        ///   TotalCPU_ms        = s.cpu_time, 
        ///   UserProcess  = CONVERT(CHAR(1), s.is_user_process),
        ///   LoginInfo    = s.login_name,   
        ///   DbInstance   = ISNULL(db_name(r.database_id), N&apos;&apos;), 
        ///   TaskState    = ISNULL(t.task_state, N&apos;&apos;), 
        ///   Command      = ISNULL(r.command, N&apos;&apos;), 
        ///   App            = ISNULL(s.program_name, N&apos;&apos;), 
        ///   WaitTime_ms  = ISNULL(w.wait_duration_ms, 0),
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Processes {
            get {
                return ResourceManager.GetString("Processes", resourceCulture);
            }
        }
    }
}
